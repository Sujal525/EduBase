"use strict";var e=require("viem"),r=require("viem/accounts"),t=require("./errors.js"),a=require("./utils-b_q_8DAC.js");require("node-fetch-native"),require("ts-case-convert");let i=e=>{if("legacy"===e)return 0;if("eip2930"===e)return 1;if("eip1559"==e||void 0===e)return 2;throw new t.PrivyClientError("EIP4844 and EIP7702 transaction types are not yet supported.")},s=e=>{if(e)return`0x${e.toString(16)}`},n=e=>"string"==typeof e?e:"string"==typeof e.raw?Uint8Array.from(Buffer.from(e.raw.slice(2),"hex")):e.raw,o=e=>({to:e.to??void 0,nonce:e.nonce,chainId:e.chainId,data:e.data,value:s(e.value),type:i(e.type),gasLimit:s(e.gas),gasPrice:s(e.gasPrice),maxFeePerGas:s(e.maxFeePerGas),maxPriorityFeePerGas:s(e.maxPriorityFeePerGas)});exports.createViemAccount=async i=>{let{walletId:s,address:d,privy:u}=i;return r.toAccount({address:d,signMessage:async({message:e})=>{let r=n(e),{signature:t}=await u.walletApi.ethereum.signMessage({walletId:s,message:r});return t},signTypedData:async r=>{let{message:i,domain:n,types:o,primaryType:d}=a.replaceBigInts(r,e.toHex);if(!n)throw new t.PrivyClientError("typedData.domain must be defined");if(!i||!o)throw new t.PrivyClientError("typedData.message must be defined");let{signature:c}=await u.walletApi.ethereum.signTypedData({walletId:s,typedData:{domain:n,message:i,primaryType:d,types:o}});return c},signTransaction:async e=>{let r=o(e),{signedTransaction:t}=await u.walletApi.ethereum.signTransaction({walletId:s,transaction:r});return t}})};
